Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.local/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/.local/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/runner/.local/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/runner/.local/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.local/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.local/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import unmap

cmap = unmap.guess_cmap_from_array(imarray)
cmap
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn [4], line 3[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01munmap[39;00m
[0;32m----> 3[0m cmap [38;5;241m=[39m unmap[38;5;241m.[39mguess_cmap_from_array(imarray)
[1;32m      4[0m cmap

File [0;32m~/.local/lib/python3.8/site-packages/unmap/unweave.py:257[0m, in [0;36mguess_cmap_from_array[0;34m(array, source_colors, target_colors, min_weight, max_dist, max_neighbours, reverse, equilibrate)[0m
[1;32m    241[0m [38;5;124;03m"""[39;00m
[1;32m    242[0m [38;5;124;03mGuess the colormap of an image.[39;00m
[1;32m    243[0m 
[0;32m   (...)[0m
[1;32m    254[0m 
[1;32m    255[0m [38;5;124;03m"""[39;00m
[1;32m    256[0m imarray, uniq [38;5;241m=[39m convert_imarray(array, colors[38;5;241m=[39msource_colors)
[0;32m--> 257[0m G [38;5;241m=[39m [43mconstruct_graph[49m[43m([49m[43mimarray[49m[43m,[49m[43m [49m[43mcolors[49m[38;5;241;43m=[39;49m[43msource_colors[49m[43m)[49m
[1;32m    258[0m G0 [38;5;241m=[39m prune_graph(G, uniq, min_weight[38;5;241m=[39mmin_weight, max_dist[38;5;241m=[39mmax_dist, max_neighbours[38;5;241m=[39mmax_neighbours)
[1;32m    259[0m path [38;5;241m=[39m longest_shortest_path(G0)

File [0;32m~/.local/lib/python3.8/site-packages/unmap/unweave.py:66[0m, in [0;36mconstruct_graph[0;34m(imarray, colors, normed)[0m
[1;32m     51[0m [38;5;28;01mdef[39;00m [38;5;21mconstruct_graph[39m(imarray, colors[38;5;241m=[39m[38;5;241m256[39m, normed[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[1;32m     52[0m     [38;5;124;03m"""[39;00m
[1;32m     53[0m [38;5;124;03m    Construct an undirected value adjacency graph from an image array.[39;00m
[1;32m     54[0m 
[0;32m   (...)[0m
[1;32m     64[0m [38;5;124;03m        G (nx.Graph): Value adjacency graph.[39;00m
[1;32m     65[0m [38;5;124;03m    """[39;00m
[0;32m---> 66[0m     glcm [38;5;241m=[39m [43mgraycomatrix[49m[43m([49m[43mimarray[49m[43m,[49m
[1;32m     67[0m [43m                        [49m[43mdistances[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;241;43m1[39;49m[43m][49m[43m,[49m
[1;32m     68[0m [43m                        [49m[43mangles[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[43mnp[49m[38;5;241;43m.[39;49m[43mpi[49m[38;5;241;43m/[39;49m[38;5;241;43m4[39;49m[43m,[49m[43m [49m[43mnp[49m[38;5;241;43m.[39;49m[43mpi[49m[38;5;241;43m/[39;49m[38;5;241;43m2[39;49m[43m,[49m[43m [49m[38;5;241;43m3[39;49m[38;5;241;43m*[39;49m[43mnp[49m[38;5;241;43m.[39;49m[43mpi[49m[38;5;241;43m/[39;49m[38;5;241;43m4[39;49m[43m][49m[43m,[49m
[1;32m     69[0m [43m                        [49m[43mlevels[49m[38;5;241;43m=[39;49m[43mcolors[49m[43m,[49m
[1;32m     70[0m [43m                        [49m[43msymmetric[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m
[1;32m     71[0m [43m                        [49m[43m)[49m
[1;32m     73[0m     [38;5;66;03m# Add transitions over all directions.[39;00m
[1;32m     74[0m     glcm [38;5;241m=[39m np[38;5;241m.[39msum(np[38;5;241m.[39msqueeze(glcm), axis[38;5;241m=[39m[38;5;241m-[39m[38;5;241m1[39m)

File [0;32m~/.local/lib/python3.8/site-packages/skimage/feature/texture.py:142[0m, in [0;36mgraycomatrix[0;34m(image, distances, angles, levels, symmetric, normed)[0m
[1;32m    138[0m P [38;5;241m=[39m np[38;5;241m.[39mzeros((levels, levels, [38;5;28mlen[39m(distances), [38;5;28mlen[39m(angles)),
[1;32m    139[0m              dtype[38;5;241m=[39mnp[38;5;241m.[39muint32, order[38;5;241m=[39m[38;5;124m'[39m[38;5;124mC[39m[38;5;124m'[39m)
[1;32m    141[0m [38;5;66;03m# count co-occurences[39;00m
[0;32m--> 142[0m [43m_glcm_loop[49m[43m([49m[43mimage[49m[43m,[49m[43m [49m[43mdistances[49m[43m,[49m[43m [49m[43mangles[49m[43m,[49m[43m [49m[43mlevels[49m[43m,[49m[43m [49m[43mP[49m[43m)[49m
[1;32m    144[0m [38;5;66;03m# make each GLMC symmetric[39;00m
[1;32m    145[0m [38;5;28;01mif[39;00m symmetric:

File [0;32m~/.local/lib/python3.8/site-packages/skimage/feature/_texture.pyx:19[0m, in [0;36mskimage.feature._texture._glcm_loop[0;34m()[0m

File [0;32mstringsource:658[0m, in [0;36mView.MemoryView.memoryview_cwrapper[0;34m()[0m

File [0;32mstringsource:349[0m, in [0;36mView.MemoryView.memoryview.__cinit__[0;34m()[0m

[0;31mValueError[0m: buffer source array is read-only
ValueError: buffer source array is read-only

